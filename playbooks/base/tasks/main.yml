---

#
# Homebrew.
#

#
# TODO:
# - sdkman installation
#

# Do a brew update.
- homebrew:
    update_homebrew: 'yes'

- name: 'install asdf'
  homebrew:
    name: 'asdf'
    state: 'present'

- name: 'install fzf'
  homebrew:
    name: 'fzf'
    state: 'latest'

- name: 'install ripgrep'
  homebrew:
    name: 'ripgrep'
    state: 'latest'

#
# Prompts
#

- name: 'install starship'
  homebrew:
    name: 'starship'
    state: 'latest'

#
# Bash
#

# The bash version installed with OS X is ancient (due to licensing changes in
# more recent versions). We'll install a newer one.
- name: 'install bash'
  homebrew:
    name: 'bash'
    state: 'latest'

- name: 'install zinit'
  git:
    repo: 'https://github.com/zdharma/zinit.git'
    dest: '~/.zinit/bin'

#
# The "environment:" stuff here kind of a hack. Seems ansible passes the
# existing environment when sudoing. For me, that includes asdf, which is
# managing my python env. This creates all kinds of grief when sudo'ed.  I
# could munge my path to remove the asdf stuff, but it seems all we need in
# the path is '/usr/bin'.
#

- name: 'add homebrew bash to /etc/shells'
  lineinfile:
    path: '/etc/shells'
    line: '/usr/local/bin/bash'
    state: 'present'
  become: 'yes'
  environment:
    PATH: '/usr/bin'

#
# Homebrew casks.
#

#
# Casks are kind of a pain to manage. We're just gonna ensure they're present
# here and then going forward manage them via brew and/or each apps auto update
# feature (for those that auto update).
#

- name: 'install iterm2'
  homebrew_cask:
    name: 'iterm2'
    state: 'present'
    accept_external_apps: 'yes'

- name: 'install karabiner-elements'
  homebrew_cask:
    name: 'karabiner-elements'
    state: 'present'
    accept_external_apps: 'yes'

- name: 'install maccy'
  homebrew_cask:
    name: 'maccy'
    state: 'present'
    accept_external_apps: 'yes'

- name: 'install macvim'
  homebrew_cask:
    name: 'macvim'
    state: 'present'
    accept_external_apps: 'yes'

- name: 'install vivaldi'
  homebrew_cask:
    name: 'vivaldi'
    state: 'present'
    accept_external_apps: 'yes'

#
# Fonts
#

- name: 'install source-code-pro-for-powerline font'
  homebrew_cask:
    name: 'font-source-code-pro-for-powerline'
    state: 'latest'

- name: 'install font-sauce-code-pro-nerd-font'
  homebrew_cask:
    name: 'font-sauce-code-pro-nerd-font'
    state: 'latest'

#
# My dotfiles.
#

- name: '.bashrc symlink'
  file:
    src: '{{ playbook_dir }}/../dotfiles/.bashrc'
    dest: '~/.bashrc'
    state: 'link'

- name: '.profile symlink'
  file:
    src: '{{ playbook_dir }}/../dotfiles/.profile'
    dest: '~/.profile'
    state: 'link'

- name: '.zshenv symlink'
  file:
    src: '{{ playbook_dir }}/../dotfiles/.zshenv'
    dest: '~/.zshenv'
    state: 'link'

- name: '.zprofile symlink'
  file:
    src: '{{ playbook_dir }}/../dotfiles/.zprofile'
    dest: '~/.zprofile'
    state: 'link'

- name: '.zshrc symlink'
  file:
    src: '{{ playbook_dir }}/../dotfiles/.zshrc'
    dest: '~/.zshrc'
    state: 'link'

#
# zsh
#

- name: 'create ~/.zsh'
  file:
    path: '{{ item }}'
    state: 'directory'
  loop:
    - '~/.zsh'
    - '~/.zsh/plugins'
    - '~/.zsh/site-functions'

- name: 'install zsh_unplugged'
  ansible.builtin.git:
    repo: 'https://github.com/mattmc3/zsh_unplugged.git'
    dest: '~/.zsh/plugins/zsh_unplugged'
  tags:
    - 'iterm-config'


#
# .ssh config
#

- name: 'create ~/.ssh'
  file:
    path: '~/.ssh'
    state: 'directory'
    mode: '0700'

- name: 'create .ssh config'
  ansible.builtin.copy:
    content: |
      AddKeysToAgent yes
      UseKeychain yes
    dest: '~/.ssh/config'
    force: 'no'

#
# iTerm config.
#

- name: 'install iterm color schemes'
  ansible.builtin.git:
    repo: 'https://github.com/mbadolato/iTerm2-Color-Schemes.git'
    dest: '~/.iterm-color-schemes'
  tags:
    - 'iterm-config'

- name: 'create ~/.iterm'
  file:
    path: '~/.iterm'
    state: 'directory'
    mode: '0700'
  tags:
    - 'iterm-config'

- name: 'create ~/.iterm/README.txt'
  ansible.builtin.copy:
    content: |
      iTerm Configuration Settings

      The com.googlecode.iterm2.plist file in this directory is a localized
      (i.e. updated for current user home dir locations) version of the one
      maintained in the mac-provision git repository.

      iTerm should be configured to read/write its configuration here.

      Any changes worth keeping should be back-ported to the mac-provision
      repository version.

      For more, see https://github.com/ljohnston/mac-provision
    dest: '~/.iterm/README.txt'
  tags:
    - 'iterm-config'

- name: 'copy iterm config for localization'
  copy:
    src: '{{ playbook_dir }}/../config/com.googlecode.iterm2.plist'
    dest: '~/.iterm/com.googlecode.iterm2.plist'
    force: 'no'
  register: localized_iterm_config
  tags:
    - 'iterm-config'

- name: 'localize iterm config'
  ansible.builtin.replace:
    path: '~/.iterm/com.googlecode.iterm2.plist'
    regexp: '^(.*)/Users/(?!{{ ansible_user_id }}(/|<))[^/<]*(.*)$'
    replace: '\1/Users/{{ ansible_user_id }}\3'
  when: localized_iterm_config.changed
  tags:
    - 'iterm-config'

#
# App config.
#

- name: 'create ~/.config'
  file:
    path: '~/.config'
    state: 'directory'
    mode: '0700'

- name: 'starship.toml symlink'
  file:
    src: '{{ playbook_dir }}/../config/starship.toml'
    dest: '~/.config/starship.toml'
    state: 'link'

- name: 'create ~/.config/karabiner'
  file:
    path: '~/.config/karabiner'
    state: 'directory'
    mode: '0700'

- name: 'karabiner.json symlink'
  file:
    src: '{{ playbook_dir }}/../config/karabiner.json'
    dest: '~/.config/karabiner/karabiner.json'
    state: 'link'

#
# My vim config.
#

- name: 'install vim config'
  git:
    repo: 'https://github.com/ljohnston/vim.git'
    dest: '~/.vim'

- name: 'configure vim'
  command: '~/.vim/bin/setup install'
  args:
    creates: '~/.vim/plugged'

- name: 'vimwiki symlink'
  file:
    src: '~/Google Drive/vimwiki'
    dest: '~/vimwiki'
    state: 'link'
